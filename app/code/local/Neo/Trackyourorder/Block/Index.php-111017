<?php   
class Neo_Trackyourorder_Block_Index extends Mage_Core_Block_Template{   


	protected function getCollection(){
		$customer = Mage::getSingleton('customer/session')->getCustomer();
		$collection = Mage::getModel('sales/order')->getCollection()
                      ->addAttributeToFilter('customer_email', $customer->getEmail());

      	return $collection;
	}

	protected function getEmail(){
		$customer = Mage::getSingleton('customer/session')->getCustomer();

      	return $customer->getEmail();
	}

	public function getTrackyourorderUrl(){

      	return $this->getUrl('trackyourorder/index/trackorder');
	}

	protected function trackingCode(){
		$postData = $this->getRequest()->getPost();
		// $orderIncrementId = '200045975'; //vexpress done
		// $orderIncrementId = '200041354'; //bd not done
		$orderIncrementId = '200043676';//ecom done
		// $orderIncrementId = '200061525';//fedex
		// $orderIncrementId = '200042199';//fedex

		$order = Mage::getModel('sales/order')->loadByIncrementId($orderIncrementId);

		if(is_object($order->getShippingAddress())){
		//if($postData['order_mail'] && $postData['order_id']){
			
			$shipmentCollection = $order->getShipmentsCollection();

			$queryArray = array();
 
			$queryArray['order_date'] = Mage::getModel('core/date')->date('g:ia jS F, Y', strtotime($order->getCreatedAt()));

			$queryArray['step'] = 'step1';

			$shipping = $order->getShippingAddress()->getFormated();


			foreach($shipmentCollection as $shipment){
		        $shipmentIncrementId = $shipment->getIncrementId();
		        $shipment=Mage::getModel('sales/order_shipment')->loadByIncrementId($shipmentIncrementId);
	            foreach ($shipment->getAllTracks() as $track) {

	               $queryArray['track_number'] = $track->getTrackNumber();
	               $queryArray['order_increment_id'] = $orderIncrementId;
	               $queryArray['title'] = $track->getTitle();
	               $queryArray['step'] = 'step2';
	               $queryArray['ship_date'] = Mage::getModel('core/date')->date('g:ia jS F, Y', strtotime($track->getCreatedAt()));
	               $queryArray['ship_addr'] = $shipping;

	               break 2; 
	            } 

          	}
// echo $queryArray['title']; exit;
          	//v_express\
          	if($queryArray['title'] == 'ecom_express'){
          		$returnTracking = $this->ecomexpress($queryArray);
          	}elseif($queryArray['title'] == 'bluedart'){
          		$returnTracking = $this->bluedart($queryArray);
          	}elseif($queryArray['title'] == 'v_express'){
          		$returnTracking = $this->vexpress($queryArray);
          	}elseif($queryArray['title'] == 'FEDEX_EXPRESS_SAVER'){
          		$returnTracking = $this->fedex($queryArray);
          	}

			return $returnTracking;
		}else{
			return 0;
		}
	}

	protected function bluedart($queryArray)
	{	
		$lickey = '4ecbd06dc0b9737d69120029cb05c9df';
		$loginid = 'BOM00001';
		$awbnumbers = $queryArray['track_number'];
		$url = "http://www.bluedart.com/servlet/RoutingServlet?handler=tnt&action=custawbquery&loginid=$loginid&awb=awb&numbers=$awbnumbers&format=xml&lickey=$lickey&verno=1.3f&scan=1";

		$ch = curl_init();
		curl_setopt($ch, CURLOPT_URL, $url); 
		curl_setopt($ch, CURLOPT_POST, 1); 
		curl_setopt($ch, CURLOPT_TIMEOUT, 100);
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); 
		curl_setopt($ch, CURLOPT_POSTFIELDS, $postData); 
		$xml = curl_exec($ch);
		$res = simplexml_load_string($xml);
		$trackingArray = (array)$res;
		// print_r($trackingArray);
		$returnTracking = array();
		$scanStatus = array();

		$xml = new SimpleXMLElement($xml);
		$i = 1;
		$j = 0;
		foreach($trackingArray as $key=>$data)
		{
			$awb = (array) $trackingArray['Shipment'];

 

			foreach ($data as $newkey => $newvalue) {
				foreach ($newvalue as $key => $value) { 
					$scan = ( array ) $value;

					$scanStatus[$j]['date'] = $scan['ScanDate'].' '.$scan['ScanTime'];
					$scanStatus[$j]['status'] = $scan['Scan'];
					$scanStatus[$j]['resion'] = $scan['ScannedLocation'];

					if($i == 5){
						 break 2; 
					}

					$j++;
					$i++;
				}
			}
		}


		$returnTracking['awb']['customer'] = $awb['CustomerName'];
		$returnTracking['awb']['status'] = $awb['StatusType'];
		$returnTracking['awb']['tracking_status'] = $awb['Status'];
		$returnTracking['awb']['receiver'] = $awb['ReceivedBy'];
		$returnTracking['awb']['delivery_date'] = $awb['ExpectedDeliveryDate'];
		$returnTracking['status'] = $scanStatus;
		$returnTracking['title'] = $queryArray['title'];

		$returnTracking['ship_date'] = $queryArray['ship_date'];
		$returnTracking['order_date'] = $queryArray['order_date'];
		$returnTracking['ship_addr'] = $queryArray['ship_addr'];

		if($returnTracking['awb']['tracking_status'] == 'SHIPMENT DELIVERED'){
			$returnTracking['step'] = 'step3';
		}else{
			$returnTracking['step'] = $queryArray['step'];
		}
		

		return $returnTracking;



	}

	protected function ecomexpress($queryArray)
	{
		    $username = 'amiable92914';
			$pass = 'a4m7ia38b6lel2e3c9tr';
			$awb = $queryArray['track_number'];
			$order = $queryArray['order_increment_id'];

			// $url = "http://plapi.ecomexpress.in/track_me/api/mawbd/?awb=$awb&order=$order&username=$username&password=$pass";
			$url = "http://plapi.ecomexpress.in/track_me/api/mawbd/";

			$postData['awb'] = $awb;
			$postData['order'] = $order;
			$postData['username'] = $username;
			$postData['password'] = $pass;
			$ch = curl_init();
			curl_setopt($ch, CURLOPT_URL, $url); 
			curl_setopt($ch, CURLOPT_POST, 1); 
			curl_setopt($ch, CURLOPT_TIMEOUT, 100);
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); 
			curl_setopt($ch, CURLOPT_POSTFIELDS, $postData); 
			$xml = curl_exec($ch);
			echo $str_test = (string) $xml;
			// echo $data_str = string($xml);
			// var_dump($xml);
			// exit;
			// var_dump($xml);
			// echo htmlentities($xml);
			/*$test_string = '<?xml version="1.0" encoding="utf-8"?> <ecomexpress-objects version="1.0"> <object pk="1" model="awb"> <field type="BigIntegerField" name="awb_number">853801037</field> <field type="CharField" name="orderid">200043676</field> <field type="FloatField" name="actual_weight">5</field> <field type="CharField" name="origin">BHIWANDI - BWP</field> <field type="CharField" name="destination">NAWADA - NWD</field> <field type="CharField" name="current_location_name">NAWADA - NWD</field> <field type="CharField" name="current_location_code">NWD</field> <field type="CharField" name="customer">AMIABLE ELECTRONICS PRIVATE LIMITED - 92914</field> <field type="CharField" name="consignee">md ainul</field> <field type="CharField" name="pickupdate">02-Mar-2017</field> <field type="CharField" name="status">Delivered / Closed</field> <field type="CharField" name="tracking_status">Delivered</field> <field type="CharField" name="reason_code">999 - Delivered</field> <field type="CharField" name="reason_code_description">Delivered</field> <field type="CharField" name="reason_code_number">999</field> <field type="CharField" name="receiver">Self:md ainul: Android</field> <field type="CharField" name="lat">0.0000000</field> <field type="CharField" name="long">0.0000000</field> <field type="CharField" name="expected_date" >07-Mar-2017</field> <field type="CharField" name="last_update_date" ></field> <field type="CharField" name="last_update_datetime" ></field> <field type="CharField" name="delivery_date" >2017-03-08 11:21:00</field> <field type="CharField" name="ref_awb" >None</field> <field type="CharField" name="rts_shipment" >0</field> <field type="CharField" name="system_delivery_update" >2017-03-08 12:12:56</field> <field type="CharField" name="rts_system_delivery_status" ></field> <field type="CharField" name="rts_reason_code_number"></field> <field type="CharField" name="rts_last_update"></field> <field type="CharField" name="pincode" >805110</field> <field type="CharField" name="city" >NAWADA</field> <field type="CharField" name="state" >Bihar</field> <field type="CharField" name="delivery_pod_image" ></field> <field type="CharField" name="delivery_pod_signature" >http://api3.ecomexpress.in//static/lastmile//sign/sign_853801037_2017030812121488955376.png</field> <field type="CharField" name="rev_pickup_signature" ></field> <field type="CharField" name="rev_pickup_packed_image" ></field> <field type="CharField" name="rev_pickup_open_image" ></field> </object></ecomexpress-objects>';*/
			libxml_use_internal_errors(true);
			$res = simplexml_load_string($str_test);
			if ($res === false) {
			    echo "Failed loading XML\n";
			    foreach(libxml_get_errors() as $error) {
			        echo "\t", $error->message;
			    }
			}
			// $trackingArray = (array)$res;
			// print_r($trackingArray);
			exit;
			// $xml = new SimpleXMLElement($xml);
			
			$returnTracking = array();
			$scanStatus = array();
			$i = 1;
			$j = 0;
			foreach($trackingArray as $key=>$data)
			{
				$awb = (array) $trackingArray['object'];

				foreach ($data as $newkey => $newvalue) {
					foreach ($newvalue as $key => $value) { 
						$scan = ( array ) $value;

						foreach ($scan as $key => $value) {
							if($i % 2 == 0){
								$scanStatus[$j]['date'] = $value[0];
								$scanStatus[$j]['status'] = $value[1];
								$scanStatus[$j]['resion'] = $value[8];
								$j++;

								if($j == 5){
									 break 2; 
								}
							}

							$i++;
						}
					}
				}
			}
			$returnTracking['awb']['customer'] = 'ECOM EXPRESS LTD';
			$returnTracking['awb']['status'] = $awb['field'][12];
			$returnTracking['awb']['tracking_status'] = $awb['field'][11];
			$returnTracking['awb']['receiver'] = $awb['field'][15];
			$returnTracking['awb']['delivery_date'] = Mage::getModel('core/date')->date('g:ia jS F, Y', strtotime($awb['field'][18]));
			$returnTracking['status'] = $scanStatus;
			$returnTracking['title'] = $queryArray['title'];

			$returnTracking['ship_date'] = $queryArray['ship_date'];
			$returnTracking['order_date'] = $queryArray['order_date'];
			$returnTracking['ship_addr'] = $queryArray['ship_addr'];

			if($returnTracking['awb']['tracking_status'] == 'Delivered'){
				$returnTracking['step'] = 'step3';
			}else{
				$returnTracking['step'] = $queryArray['step'];
			}
			

			return $returnTracking;
	}

	protected function vexpress($queryArray)
	{
		    
		    $username = 'amiable';
			$pass = 'electronic@vxecom';
			$awb = $queryArray['track_number'];
			$order = $queryArray['order_increment_id'];
			$tracktype = 'AWBNO';
			$docket_no = 8734338;

			//$url = "http://plapi.ecomexpress.in/track_me/api/mawbd/?awb=$awb&order=$order&username=$username&password=$pass";
			// $url = "http://124.153.92.36/vxws/vxecommws.asmx/GetECommDocketTrackTraceData?UserID=$username&PassWord=$pass&TrackType=$tracktype&DocketNo=$awb";
			//"http://124.153.92.36/vxws/vxecommws.asmx/GetECommDocketTrackTraceData?UserID=amiable&PassWord=electronic@vxecom&TrackType=AWBNO&DocketNo=8734338";
			//echo "http://124.153.92.36/vxws/vxecommws.asmx/GetECommDocketTrackTraceData?UserID=$username&PassWord=$pass&TrackType=$tracktype&DocketNo=$docket_no";
			

			$url = 'http://124.153.92.36/vxws/vxecommws.asmx/GetECommDocketTrackTraceData';

			$soap_url = 'http://124.153.92.36/vxws/vxecommws.asmx?wsdl';
			$request_param = array(
			    "userID" => $username,
			    "PassWord" => $pass,
			    "TrackType" => $tracktype,
			    "DocketNo" => $docket_no
			);

			$client     = new SoapClient($soap_url, array("trace" => 1, "exception" => 0)); 

			    $response = $client->GetECommDocketTrackTraceData($request_param);
			    // print_r($response);

			    $result = $response->GetECommDocketTrackTraceDataResult;

			    // print_r($result);
			    $xmlString = $result->any;
			    // var_dump($xmlString);

			    $xml = new SimpleXMLElement($xmlString);

			    // var_dump($xml);

			    $xmlArray = $xml->NewDataSet->Table;
			    // print_r($xmlArray);
			    // echo $xmlArray->Consignee_Name;
			    $j = 0;
			    $scanStatus[$j]['date'] = (string)  $xmlArray->ECOMTimeStamp;
				$scanStatus[$j]['status'] = (string)  $xmlArray->Status_Code;
				$scanStatus[$j]['resion'] = (string)  $xmlArray->Consignee_City;
			    // foreach ($xmlArray as $element) {
			    	
			    	//echo $tracking_code = $element['Tracking_Code'];
			    	// foreach ($element as $key => $value) {
						//echo "<br>$key => $value";
			    	// }
			    // }

			    $returnTracking['awb']['customer'] = (string) $xmlArray->Vendor_Name;
				$returnTracking['awb']['status'] = (string)  $xmlArray->Status_Code;
				$returnTracking['awb']['tracking_status'] = (string)  $xmlArray->Consignee_Name;
				$returnTracking['awb']['receiver'] = (string)  $xmlArray->Consignee_Name;
				$returnTracking['awb']['delivery_date'] = Mage::getModel('core/date')->date('g:ia jS F, Y', strtotime((string) $xmlArray->ECOMTimeStamp));
				$returnTracking['status'] = $scanStatus;
				$returnTracking['title'] = $queryArray['title'];

				$returnTracking['ship_date'] = $queryArray['ship_date'];
				$returnTracking['order_date'] = $queryArray['order_date'];
				$returnTracking['ship_addr'] = $queryArray['ship_addr'];

				if($returnTracking['awb']['tracking_status'] == 'Delivered'){
					$returnTracking['step'] = 'step3';
				}else{
					$returnTracking['step'] = $queryArray['step'];
				}
			return $returnTracking;
	}

	public function fedex($queryArray){
		$helper = Mage::helper('trackyourorder');

		echo $key = $this->getProperty('key');
	}

	
	protected function getProperty($var){
        if($var == 'key') Return Mage::getStoreConfig('shipping/fedex/key');
        if($var == 'password') Return Mage::getStoreConfig('shipping/fedex/password');
        if($var == 'shipaccount') Return Mage::getStoreConfig('shipping/fedex/shipaccount');
        if($var == 'billaccount') Return Mage::getStoreConfig('shipping/fedex/shipaccount');
        if($var == 'dutyaccount') Return Mage::getStoreConfig('shipping/fedex/shipaccount');
        if($var == 'freightaccount') Return Mage::getStoreConfig('shipping/fedex/shipaccount');
        if($var == 'trackaccount') Return Mage::getStoreConfig('shipping/fedex/shipaccount');
        if($var == 'dutiesaccount') Return Mage::getStoreConfig('shipping/fedex/shipaccount');
        if($var == 'importeraccount') Return Mage::getStoreConfig('shipping/fedex/shipaccount');
        if($var == 'brokeraccount') Return Mage::getStoreConfig('shipping/fedex/shipaccount');
        if($var == 'distributionaccount') Return Mage::getStoreConfig('shipping/fedex/shipaccount');
        if($var == 'locationid') Return 'PLBA';
        if($var == 'printlabels') Return false;
        if($var == 'printdocuments') Return true;
        if($var == 'packagecount') Return '1';

        if($var == 'meter') Return Mage::getStoreConfig('shipping/fedex/meter');

        if($var == 'shiptimestamp') Return mktime(10, 0, 0, date("m"), date("d")+1, date("Y"));

        if($var == 'spodshipdate') Return '2014-07-21';
        if($var == 'serviceshipdate') Return '2017-07-26';

        if($var == 'readydate') Return '2014-07-09T08:44:07';
        //if($var == 'closedate') Return date("Y-m-d");
        if($var == 'closedate') Return '2014-07-17';
        if($var == 'pickupdate') Return date("Y-m-d", mktime(8, 0, 0, date("m")  , date("d")+1, date("Y")));
        if($var == 'pickuptimestamp') Return mktime(8, 0, 0, date("m")  , date("d")+1, date("Y"));
        if($var == 'pickuplocationid') Return 'XXX';
        if($var == 'pickupconfirmationnumber') Return '1';

        if($var == 'dispatchdate') Return date("Y-m-d", mktime(8, 0, 0, date("m")  , date("d")+1, date("Y")));
        if($var == 'dispatchlocationid') Return 'XXX';
        if($var == 'dispatchconfirmationnumber') Return '1';

        if($var == 'tag_readytimestamp') Return mktime(10, 0, 0, date("m"), date("d")+1, date("Y"));
        if($var == 'tag_latesttimestamp') Return mktime(20, 0, 0, date("m"), date("d")+1, date("Y"));

        if($var == 'expirationdate') Return date("Y-m-d", mktime(8, 0, 0, date("m"), date("d")+15, date("Y")));
        if($var == 'begindate') Return '2014-07-22';
        if($var == 'enddate') Return '2014-07-25';

        if($var == 'trackingnumber') Return 'XXX';

        if($var == 'hubid') Return '5531';

        if($var == 'jobid') Return 'XXX';

        if($var == 'searchlocationphonenumber') Return '5555555555';
        if($var == 'customerreference') Return 'Cust_Reference';

        if($var == 'shipper') Return array(
            'Contact' => array(
                'PersonName' => 'Sender Name',
                'CompanyName' => 'Sender Company Name',
                'PhoneNumber' => '1234567890'
            ),
            'Address' => array(
                'StreetLines' => array('Address Line 1'),
                'City' => 'Collierville',
                'StateOrProvinceCode' => 'TN',
                'PostalCode' => '38017',
                'CountryCode' => 'US',
                'Residential' => 1
            )
        );
        if($var == 'recipient') Return array(
            'Contact' => array(
                'PersonName' => 'Recipient Name',
                'CompanyName' => 'Recipient Company Name',
                'PhoneNumber' => '1234567890'
            ),
            'Address' => array(
                'StreetLines' => array('Address Line 1'),
                'City' => 'Herndon',
                'StateOrProvinceCode' => 'VA',
                'PostalCode' => '20171',
                'CountryCode' => 'US',
                'Residential' => 1
            )
        );

        if($var == 'address1') Return array(
            'StreetLines' => array('10 Fed Ex Pkwy'),
            'City' => 'Memphis',
            'StateOrProvinceCode' => 'TN',
            'PostalCode' => '38115',
            'CountryCode' => 'US'
        );
        if($var == 'address2') Return array(
            'StreetLines' => array('13450 Farmcrest Ct'),
            'City' => 'Herndon',
            'StateOrProvinceCode' => 'VA',
            'PostalCode' => '20171',
            'CountryCode' => 'US'
        );
        if($var == 'searchlocationsaddress') Return array(
            'StreetLines'=> array('240 Central Park S'),
            'City'=>'Austin',
            'StateOrProvinceCode'=>'TX',
            'PostalCode'=>'78701',
            'CountryCode'=>'US'
        );

        if($var == 'shippingchargespayment') Return array(
            'PaymentType' => 'SENDER',
            'Payor' => array(
                'ResponsibleParty' => array(
                    'AccountNumber' => getProperty('billaccount'),
                    'Contact' => null,
                    'Address' => array('CountryCode' => 'US')
                )
            )
        );
        if($var == 'freightbilling') Return array(
            'Contact'=>array(
                'ContactId' => 'freight1',
                'PersonName' => 'Big Shipper',
                'Title' => 'Manager',
                'CompanyName' => 'Freight Shipper Co',
                'PhoneNumber' => '1234567890'
            ),
            'Address'=>array(
                'StreetLines'=>array(
                    '1202 Chalet Ln',
                    'Do Not Delete - Test Account'
                ),
                'City' =>'Harrison',
                'StateOrProvinceCode' => 'AR',
                'PostalCode' => '72601-6353',
                'CountryCode' => 'US'
            )
        );
    }

	public function convertXmlObjToArr($obj, &$arr){
        $children = $obj->children();
        $executed = false;
        foreach ($children as $elementName => $node){
            if($arr[$elementName]!=null){
                if($arr[$elementName][0]!==null){
                    $i = count($arr[$elementName]);
                        $this->convertXmlObjToArr($node, $arr[$elementName][$i]);
                }else{
                    $tmp = $arr[$elementName];
                    $arr[$elementName] = array();
                    $arr[$elementName][0] = $tmp;
                    $i = count($arr[$elementName]);
                        $this->convertXmlObjToArr($node, $arr[$elementName][$i]);
                }
            }else{
                            $arr[$elementName] = array();
                            $this->convertXmlObjToArr($node, $arr[$elementName]);
            }
            $executed = true;
        }
        if(!$executed&&$children->getName()==""){
            $arr = (String)$obj;
        }
        return;
    }

}