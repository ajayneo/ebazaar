<?php
class Neo_Gadget_IndexController extends Mage_Core_Controller_Front_Action{

    const XML_PATH_EMAIL_RECIPIENT  = 'gadget/gadget/recipient_email';
    const XML_PATH_EMAIL_SENDER     = 'gadget/gadget/sender_email_identity';
    const XML_PATH_EMAIL_TEMPLATE   = 'gadget/gadget/email_template';
    const XML_PATH_ENABLED          = 'gadget/gadget/enabled';  

    public function IndexAction() {  
        // if(Mage::helper('customer')->isLoggedIn())
        // {
    		Mage::getSingleton('core/session')->unsSygform(); 
            $this->loadLayout();
            $this->getLayout()->getBlock("head")->setTitle($this->__("Gadget"));
            $this->renderLayout(); 
        // }else{
      	 //   Mage::getSingleton('customer/session')->setBeforeAuthUrl(Mage::helper('core/url')->getCurrentUrl());
        //     Mage::app()->getResponse()->setRedirect(Mage::getUrl('customer/account/login'))->sendResponse();
        // }    
    }

    public function mobileAction(){
    	  $this->loadLayout();   
	  	  $this->getLayout()->getBlock("head")->setTitle($this->__("Mobile"));
	      $this->renderLayout();
    }

    public function gadgetpostAction(){

    	$post_data=$this->getRequest()->getPost();

        if ($post_data) { 

            try { 
                $baseUrl = Mage::getBaseUrl();
                $post['name'] = $post_data['name'];       
                $post['brand'] = $post_data['brand'];       
                $post['price'] = $post_data['price'];       
                $post['switch'] = $post_data['switch'];       
                $post['pincode'] = $post_data['pincode'];       
                $post['city'] = $post_data['city'];       
                $post['email'] = $post_data['email'];       
                $post['mobile'] = $post_data['mobile'];   
                
                $mediaUrl = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA);
                $product = Mage::getModel("gadget/gadget")->load($post_data['reference_id'])->getData();
                //$post['image'] = 'http://www.electronicsbazaar.com/media/emailcampaigns/Affiliates/site/iphone.png';       
                $post['image'] = $mediaUrl . $product['image'];       

                $model = Mage::getModel("gadget/request")
                ->addData($post_data)
                ->save();

                if($model->getId()>0){

                    $postObject = new Varien_Object();
                    $postObject->setData($post); 

                    $emailId = $post_data['email'].','.Mage::getStoreConfig(self::XML_PATH_EMAIL_RECIPIENT);
                    $recipients = explode(",",$emailId);
                    $recipients[] = $post_data['email'];                      

                    $mailTemplate = Mage::getModel('core/email_template');
                    /* @var $mailTemplate Mage_Core_Model_Email_Template */
                    $mailTemplate->setDesignConfig(array('area' => 'frontend'))
                    ->setReplyTo($post_data['email']) 
                    ->sendTransactional(
                        Mage::getStoreConfig(self::XML_PATH_EMAIL_TEMPLATE),
                        Mage::getStoreConfig(self::XML_PATH_EMAIL_SENDER),
                        $recipients,
                        null,
                        array('data' => $postObject) 
                    );
                }
                Mage::app()->getResponse()->setRedirect($baseUrl."gadget/index/success/")->sendResponse();
                
                return;
            } 
            catch (Exception $e) {
                $this->_redirect($baseUrl."gadget/index/failure/");
                return;
            }

        }
        $this->_redirect($baseUrl."gadget/index/failure/"); 
    }

    public function successAction(){
        $this->loadLayout();   
          $this->getLayout()->getBlock("head")->setTitle($this->__("Success"));
          $this->renderLayout();
    }

    public function failureAction(){
          $this->loadLayout();   
          $this->getLayout()->getBlock("head")->setTitle($this->__("Failure"));
          $this->renderLayout();
    }
     
    public function searchgadgetAction()
    {                     

        $attr = 'gadget'; 
        $brand = $this->getRequest()->getPost();
        $_product = Mage::getModel('catalog/product');
        $attr = $_product->getResource()->getAttribute($attr);
        if ($attr->usesSource()) {
            $gadgetId = $attr->getSource()->getOptionId($brand['brand']); 
        }

        $products = Mage::getModel('catalog/product')
                        ->getCollection() 
                        ->addAttributeToSelect('name')
                        ->addAttributeToFilter('type_id', 'neo')                        
                        //->addAttributeToFilter('name', array('like' => '%'.$brand['string'].'%'))
                        ->addAttributeToFilter($attr, $gadgetId);    

                   

        $html = '';
 

  
        foreach($products as $product)
        {  
            //target="_blank"
            $html .= '<a  href='.$product->getUrlInStore().' onclick="fillme('."'".$product->getName()."'".');">';
            $html .= '<div class="user_div">';
            //$html .= '<img src="'.(string)Mage::helper('catalog/image')->init($product, 'image')->resize(30).'" style="border-radius:5px;float:left;">';
            $html .= '<div class="name">'.$product->getName().'</div>';
            $html .= '</div>';
            $html .= '</a>';
        }
        
        if($html == ''){
            $html = '<div class="no_data">No Result Found !</div>';
        }
        echo $html;
    }

    public function listAction(){
        $this->loadLayout();   
        $this->getLayout()->getBlock("head")->setTitle($this->__("Trade Orders"));
        $this->renderLayout(); 
    }

    public function detailAction(){
        $customer = Mage::getSingleton('customer/session');
        if(!$customer->isLoggedIn()){
            //echo 'no logged in';
            $this->_redirect('/');
            return;
        }
     $this->loadLayout();   
        $this->getLayout()->getBlock("head")->setTitle($this->__("Trade Details"));
        $this->renderLayout();   
    }

    public function NewAction() {  

          // if(Mage::helper('customer')->isLoggedIn())
          // {
            $this->loadLayout();   
            $this->getLayout()->getBlock("head")->setTitle($this->__("Gadget"));
            $this->renderLayout(); 
          // }else{
          //   Mage::getSingleton('customer/session')->setBeforeAuthUrl(Mage::helper('core/url')->getCurrentUrl());
          //   Mage::app()->getResponse()->setRedirect(Mage::getUrl('customer/account/login'))->sendResponse();
          // }    
    }

    public function checkpincodeAction(){
        if(!empty($_REQUEST['pincode'])){
            $pincodeData = Mage::getModel('operations/serviceablepincodes')->getCollection()->addFieldToFilter('pincode',$_REQUEST['pincode'])->getFirstItem()->getData();
            $cookies['pincode'] = $_REQUEST['pincode'];
            $cookies['ecom_qc'] = $pincodeData['ecom_qc'];
            Mage::getModel('core/cookie')->set('syg-pincode', serialize($cookies));

            if($pincodeData['ecom_qc']){
                echo json_encode(array("status"=>1,"message"=>"We service this pincode"));
                exit;
            }else{
                echo json_encode(array("status"=>0,"message"=>"Sorry! We are yet to service this pincode"));
                exit;
            }
        }
    }

    public function brandsAction(){
        if(!empty($_REQUEST['cat'])){
            $attribute = Mage::getSingleton('eav/config')
                ->getAttribute(Mage_Catalog_Model_Product::ENTITY, $_REQUEST['cat']);
            $skin = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_SKIN).'frontend/rwd/ebtronics/';  
            $str = '';
            if ($attribute->usesSource()) {
                $options = $attribute->getSource()->getAllOptions(false);
                if($_REQUEST['cat'] == 'gadget'){
                    $par = "mobile-";
                    $sku = "SYGMOB";
                }else if($_REQUEST['cat'] == 'gadget_laptop'){
                    $par = "laptop-";
                    $sku = "SYGLAP";
                }
                if(count($options) > 0){
                    foreach ($options as $key => $value) {
                        $class = $par.strtolower($value['label']);
                        $sku_str = $sku.strtoupper($value['label']);
                        $image_name = $value['label'];
                        if($value['label'] == 'Other'){
                            $image_name = 'laptop-icon';
                        }
                        $str .='<li onclick="sku(\''.$sku_str.'\')"class="'.$class.'"><div class="gadget-brand__box"><img src="'.$skin.'images/brands-logo/'.strtolower($image_name).'.png" alt="'.$value['label'].'"></div><div class="gadget-brand__title">'.$value['label'].'</div></li>';
                    }
                }
            }

            if(strlen($str) > 0 ){
                echo json_encode(array("status"=>1,"data"=>$str));
                exit;
            }else{
               echo json_encode(array("status"=>0,"data"=>"No Brands Found"));
                exit; 
            }
        }
    }

    public function skuAction(){
        //classes to remember
        //div //new-gadget-mobile
        //ul //gadget-mobile
        //li //mobile-apple
        
        if(!empty($_REQUEST['sku'])){

            $result_cat = substr($_REQUEST['sku'], 0, 6);
            $result_brand =  substr($_REQUEST['sku'],6);
            
            if(strlen($result_brand) > 0){
                $brand = strtolower($result_brand);
            }
            
            $cat = '';
            if($result_cat == 'SYGMOB'){
                $cat = 'mobile';
            }else if($result_cat == 'SYGLAP'){
                $cat = 'laptop';
            }
            
            if(strlen($cat) > 0 && strlen($brand)){
                $cookies['selected-div'] = '.new-gadget-'.$cat;  
                $cookies['selected-ul'] = '.gadget-'.$cat;  
                $cookies['selected-li'] = '.'.$cat.'-'.$brand; 
                $cookies['selected-li'] = '.'.$cat.'-'.$brand; 
                // setcookie("syghome", serialize($cookies), time() + (60 * 20));
                Mage::getModel('core/cookie')->set('syghome', serialize($cookies));
            }
            
            $product_id = Mage::getModel("catalog/product")->getIdBySku($_REQUEST['sku']);
        }
        
        if($product_id){    
            $_product = Mage::getModel("catalog/product")->load($product_id);
            
            $str = Mage::getBaseUrl().$_product->getUrlPath();
            echo json_encode(array("status"=>1,"data"=>$str));
            exit;
        }else{
            echo json_encode(array("status"=>0,"data"=>"No Product Found"));
            exit;
        }
        
    }

    public function trackAction(){
        $block = $this->getLayout()->createBlock('core/template')
        ->setTemplate('gadget/track.phtml');
        
        $this->getResponse()->setBody($block->toHtml());
    }

    public function serializeAction(){
        $params = $this->getRequest()->getParams();
        $product_url ='';
        $details_string = '';
        if(!empty($params)){
            $details_string .= '<ul>';
            
            if($params['processor']){
                if (!filter_var($params['processor'], FILTER_VALIDATE_URL) === false) {

                    $link_array = explode('/',$params['processor']);
                    $page = end($link_array);
                    $page = str_replace("laptop", "", $page);
                    $processor = ucfirst(trim(str_replace("-", " ", $page)));
                    $details_string .= '<li class="clearfix">';
                    $details_string .= '<label>Processor</label>';
                    $details_string .='<div class="description">'.$processor.'</div>';
                    $details_string .='</li>';

                    $params['processor'] = $processor;
                }
            } 

            Mage::getSingleton('core/session')->setSygform($params); 

            $product_url = $params['syg_product_url'];
            $product_id = $params['product_id'];
            $_productModel = Mage::getModel('catalog/product')->load($product_id);


            if($_productModel->getProductDepartment() == 2730){
                $processor = $_productModel->getName();
            }

            $_options = $_productModel->getOptions();
            $price = $params['product_price'];

            

            foreach ($_options as $value) {
                $option_id = $value->getOptionId();
                if(in_array($option_id, array_keys($params['options']))){
                    $details_string .= '<li class="clearfix">';
                
                    //option label
                    $title = $value->getTitle();
                    if(strrpos($value->getTitle(), 'condition')){ 
                        $title = 'Condition';
                    }else if(strrpos($value->getTitle(), 'compatible charger')){ 
                        $title = 'Is the compatible charger included ?';
                    }
                    $details_string .= '<label>'.$title.'</label>';
                    $session_option_type_id = $params['options'][$option_id];
                    // Getting Values if it has option values, case of select,dropdown,radio,multiselect
                    $values = $value->getValues();
                    if($value->getType() == 'field'){
                        $details_string .= '<div class="description">'.$session_option_type_id.'</div>';
                    }

                    foreach ($values as $values) {
                        $option_type_id = $values['option_type_id'];
                        if($session_option_type_id == $option_type_id){
                            $option_title = $values['default_title'];
                            $details_string .='<div class="description">'.$option_title.'</div>';
                        }
                    }
                    $details_string .='</li>';
                }
            }    
        $details_string .= '</ul>';

        }
        
        // echo $details_string; exit;
        if(Mage::helper('customer')->isLoggedIn())
        {
            echo json_encode(array("status"=>1,"message"=>$details_string,"price"=>$price));
            exit;
        }else{
            // echo $product_url; exit;
            Mage::getSingleton('customer/session')->setBeforeAuthUrl($product_url);
            echo json_encode(array("status"=>0,"message"=>"Customer Not Signed In"));
            exit;
            // Mage::app()->getResponse()->setRedirect(Mage::getUrl('customer/account/login'))->sendResponse();
        }
    }

    public function checkPostcodeAction(){
        $pincode = $this->getRequest()->getParam('postcode');
        if(!empty($pincode) && strlen($pincode) == 6){
            $serviceable = Mage::getModel('operations/serviceablepincodes')->getPincodeData($pincode);
            
            if(!empty($serviceable)){
                echo  json_encode(array('status'=>1, 'data'=>$serviceable));
                
            }else{
                echo json_encode(array('status'=>0, 'data'=>""));
                
            }   
        }else{
            echo json_encode(array('status'=>0, 'data'=>"Invalid Pincode"));
        }
    }

    public function getGadgetTrackingDetailsAction(){
        $gadget = Mage::getModel('gadget/request')->load(10439);
        $queryArray['awb_number'] = $gadget->getAwbNumber();
        $queryArray['order_id'] = $gadget->getId();
        $tracking = Mage::getModel('shippinge/ecom')->ecomexpressTracking($queryArray);
        // print_r($tracking);
    }


}  